[{"path":"http://humus.rocks/ROGRSQL/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ROGRSQL authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://humus.rocks/ROGRSQL/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew G. Brown. Maintainer.","code":""},{"path":"http://humus.rocks/ROGRSQL/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brown AG (2024). ROGRSQL: Experimental DBI Backend Geospatial Data Abstraction Library (GDAL) 'OGRSQL' Dialect. R package version 0.0.2, http://humus.rocks/ROGRSQL/.","code":"@Manual{,   title = {ROGRSQL: Experimental DBI Backend for Geospatial Data Abstraction Library (GDAL) 'OGRSQL' Dialect},   author = {Andrew G. Brown},   year = {2024},   note = {R package version 0.0.2},   url = {http://humus.rocks/ROGRSQL/}, }"},{"path":"http://humus.rocks/ROGRSQL/index.html","id":"rogrsql","dir":"","previous_headings":"","what":"Experimental DBI Backend for Geospatial Data Abstraction Library (GDAL) OGRSQL Dialect","title":"Experimental DBI Backend for Geospatial Data Abstraction Library (GDAL) OGRSQL Dialect","text":"goal {ROGRSQL} provide basic proof--concept limited DBI-compatible queries Geospatial Data Abstraction Library (GDAL) ‘OGRSQL’ dialect.","code":""},{"path":"http://humus.rocks/ROGRSQL/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Experimental DBI Backend for Geospatial Data Abstraction Library (GDAL) OGRSQL Dialect","text":"can install development version {ROGRSQL} like :","code":"remotes::install_github(\"brownag/ROGRSQL\")"},{"path":"http://humus.rocks/ROGRSQL/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Experimental DBI Backend for Geospatial Data Abstraction Library (GDAL) OGRSQL Dialect","text":"basic demonstration using sample dataset {terra} package. shapefile written new GeoPackage, GeoPackage used data source queried using GDAL OGRSQL. can make complex queries, limitations OGRSQL way geometries versus attributes interpreted. Note case two geometry columns calculated result, one selected GDAL main geometry column layer/query result. result ST_ConvexHull(geom) read non-spatial attribute.","code":"library(ROGRSQL)  path <- sample_gpkg_path()  db <- dbConnect(ROGRSQL::OGRSQL(), path) dbGetQuery(db, \"SELECT ST_Centroid(geom) FROM lux LIMIT 2\") #>                           ST_Centroid(geom) #> 1  POINT (6.0090815315983 50.0706361949086) #> 2 POINT (6.12742481671626 49.8661396602439) db <- dbConnect(ROGRSQL::OGRSQL(), path) dbGetQuery(db, \"SELECT ST_Centroid(geom), ST_ConvexHull(geom) FROM lux LIMIT 2\") #>                           ST_Centroid(geom) ST_ConvexHull(geom) #> 1  POINT (6.0090815315983 50.0706361949086)        00, 01, .... #> 2 POINT (6.12742481671626 49.8661396602439)        00, 01, ...."},{"path":"http://humus.rocks/ROGRSQL/index.html","id":"rstudio-interface-and-rmarkdown","dir":"","previous_headings":"","what":"RStudio Interface and RMarkdown","title":"Experimental DBI Backend for Geospatial Data Abstraction Library (GDAL) OGRSQL Dialect","text":"can use OGRSQL() DBI driver dynamically preview results RStudio SQL editor. simply requires using special comment top SQL script, like : 1 records {rmarkdown} code chunk, can similarly : --| connection=DBI::dbConnect(ROGRSQL::OGRSQL(),  \"inst/extdata/lux.gpkg\").","code":"-- !preview conn=DBI::dbConnect(ROGRSQL::OGRSQL(), ROGRSQL::sample_gpkg_path())  SELECT ST_Centroid(geom) FROM lux LIMIT 1;"},{"path":"http://humus.rocks/ROGRSQL/index.html","id":"constructing-ogrsql-queries-with-dbplyr","dir":"","previous_headings":"","what":"Constructing OGRSQL Queries with {dbplyr}","title":"Experimental DBI Backend for Geospatial Data Abstraction Library (GDAL) OGRSQL Dialect","text":"ROGRSQL::OGRSQL() able make full use OGRSQL dialect. unlike using {RSQLite} SQLite() driver might use querying GeoPackage, using sf::st_read(..., query=) OGR source. example, can use spatial functions ST_Centroid() within query data source. several OGRSQL specific conveniences described greater detail GDAL documentation: https://gdal.org/user/ogr_sql_dialect.html Since GDALOGRSQLConnection object db encapsulates DBIConnection, can utilize {dbplyr} construct SQL queries “lazily” R code. query built, can execute dbplyr::collect(). Note functionality work standard {RSQLite} driver.","code":"library(ROGRSQL) library(dplyr, warn.conflicts = FALSE) library(dbplyr, warn.conflicts = FALSE)  db1 <- dbConnect(RSQLite::SQLite(), system.file(\"extdata\", \"lux.gpkg\", package = \"ROGRSQL\")) db2 <- dbConnect(ROGRSQL::OGRSQL(), system.file(\"extdata\", \"lux.gpkg\", package = \"ROGRSQL\"))  # error with ST_Centroid tbl(db1, \"lux\") |>    group_by(NAME_1) |>    filter(ID_2 %% ID_1 == 0) |>   summarize(ST_Centroid(geom))  #> Error in `collect()`: #> ! Failed to collect lazy table. #> Caused by error: #> ! no such function: ST_Centroid # works tbl(db2, \"lux\") |>    group_by(NAME_1) |>     filter(ID_2 %% ID_1 == 0) |>    ungroup() |>    summarize(ST_Centroid(geom)) -> res  res |>    collect() #> Note: method with signature 'GDALOGRSQLConnection#character' chosen for function 'dbQuoteIdentifier', #>  target signature 'GDALOGRSQLConnection#SQL'. #>  \"DBIConnection#SQL\" would also be valid #> Error in `collect()`: #> ! Failed to collect lazy table. #> Caused by error in `dbSendQuery()`: #> ! Error in eval(expr, envir, enclos) : SQL execution failed. # inspect generated query show_query(res) #> <SQL> #> SELECT ST_Centroid(`geom`) AS `ST_Centroid(geom)` #> FROM ( #>   SELECT `lux`.`*` #>   FROM `lux` #>   WHERE ((`ID_2` % `ID_1`) = 0.0) #> ) `q01`"},{"path":"http://humus.rocks/ROGRSQL/index.html","id":"similar-work","dir":"","previous_headings":"","what":"Similar work","title":"Experimental DBI Backend for Geospatial Data Abstraction Library (GDAL) OGRSQL Dialect","text":"whipped proof--concept better understand workings GDAL API (accessed via excellent {vapour} package @mdsumner), well learn developing {DBI}/{dbplyr} backends. exploring topic context adding new OGRSQL-specific functionality {gpkg} utilize {vapour} rather {terra}. seem may currently package CRAN provides modern (dbplyr >= 2.0.0), fully DBI-compatible interface tailored GDAL OGRSQL dialect. , perhaps space package like , also entirely clear “needed”. point much basic SQL evaluation/spatial queries etc. can readily achieved {sf}+{DBI} {terra}. getting basics minimally working, thinking pushing repo GitHub, realized folks tread space many years prior , namely: @mdsumner (https://github.com/mdsumner/RGDALSQL); @etiennebr (https://github.com/r-spatial/sfdbi). packages appear excellent implementations, mostly working, though updated recently, developments {dbplyr} space last several years. terribly likely spend much time developing package, interested seeing functionality made available get contact . Feel free ask questions/post issues issue tracker.","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/GDALOGRSQLConnection-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DBI Connection for GDAL OGRSQL — GDALOGRSQLConnection-class","title":"DBI Connection for GDAL OGRSQL — GDALOGRSQLConnection-class","text":"DBI Connection GDAL OGRSQL Safely quote strings identifiers avoid SQL injection attacks","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/GDALOGRSQLConnection-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DBI Connection for GDAL OGRSQL — GDALOGRSQLConnection-class","text":"","code":"# S4 method for GDALOGRSQLConnection,character dbQuoteIdentifier(conn, x, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/GDALOGRSQLDriver-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DBI Driver for GDAL OGRSQL — GDALOGRSQLDriver-class","title":"DBI Driver for GDAL OGRSQL — GDALOGRSQLDriver-class","text":"DBI Driver GDAL OGRSQL","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/GDALOGRSQLDriver-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DBI Driver for GDAL OGRSQL — GDALOGRSQLDriver-class","text":"","code":"# S4 method for GDALOGRSQLDriver dbUnloadDriver(drv, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/GDALOGRSQLResult-class.html","id":null,"dir":"Reference","previous_headings":"","what":"GDALOGRSQLResult class — GDALOGRSQLResult-class","title":"GDALOGRSQLResult class — GDALOGRSQLResult-class","text":"GDALOGRSQLResult class","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/OGRSQL.html","id":null,"dir":"Reference","previous_headings":"","what":"GDAL OGR SQL Driver — OGRSQL","title":"GDAL OGR SQL Driver — OGRSQL","text":"GDAL OGR SQL Driver","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/OGRSQL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GDAL OGR SQL Driver — OGRSQL","text":"","code":"OGRSQL()  # S4 method for GDALOGRSQLDriver dbConnect(drv, dsn, bigint = \"integer64\", ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/OGRSQL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GDAL OGR SQL Driver — OGRSQL","text":"drv object created OGRSQL()) dsn character. Path OGR-compatible data source. bigint character. Return type OFTInteger64 fields. One : \"integer\", \"character\", \"numeric\", \"integer64\" (default) ... Additional arguments","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/OGRSQL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GDAL OGR SQL Driver — OGRSQL","text":"","code":"if (FALSE) { db <- dbConnect(ROGRSQL::OGRSQL(), \"nc.gpkg\") dbSendQuery(db, \"SELECT * FROM mtcars WHERE cyl == 4\") }"},{"path":"http://humus.rocks/ROGRSQL/reference/dbClearResult-GDALOGRSQLResult-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear Results — dbClearResult,GDALOGRSQLResult-method","title":"Clear Results — dbClearResult,GDALOGRSQLResult-method","text":"Clear Results","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbClearResult-GDALOGRSQLResult-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear Results — dbClearResult,GDALOGRSQLResult-method","text":"","code":"# S4 method for GDALOGRSQLResult dbClearResult(res, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbClearResult-GDALOGRSQLResult-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear Results — dbClearResult,GDALOGRSQLResult-method","text":"res GDALOGRSQLResult Object ... Additional arguments","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbColumnInfo-GDALOGRSQLResult-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names and types of the result set’s columns. — dbColumnInfo,GDALOGRSQLResult-method","title":"Get names and types of the result set’s columns. — dbColumnInfo,GDALOGRSQLResult-method","text":"Get names types result set’s columns.","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbColumnInfo-GDALOGRSQLResult-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names and types of the result set’s columns. — dbColumnInfo,GDALOGRSQLResult-method","text":"","code":"# S4 method for GDALOGRSQLResult dbColumnInfo(res)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbColumnInfo-GDALOGRSQLResult-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names and types of the result set’s columns. — dbColumnInfo,GDALOGRSQLResult-method","text":"res GDALOGRSQLResult","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbDataType-GDALOGRSQLConnection-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the database data type associated with an R object — dbDataType,GDALOGRSQLConnection-method","title":"Find the database data type associated with an R object — dbDataType,GDALOGRSQLConnection-method","text":"Find database data type associated R object","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbDataType-GDALOGRSQLConnection-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the database data type associated with an R object — dbDataType,GDALOGRSQLConnection-method","text":"","code":"# S4 method for GDALOGRSQLConnection dbDataType(dbObj, obj, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbDataType-GDALOGRSQLConnection-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the database data type associated with an R object — dbDataType,GDALOGRSQLConnection-method","text":"dbObj GDALOGRConnection obj R object ... Additional arguments","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbDisconnect-GDALOGRSQLConnection-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Disconnect a GDALOGRSQLConnection — dbDisconnect,GDALOGRSQLConnection-method","title":"Disconnect a GDALOGRSQLConnection — dbDisconnect,GDALOGRSQLConnection-method","text":"Disconnect GDALOGRSQLConnection","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbDisconnect-GDALOGRSQLConnection-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disconnect a GDALOGRSQLConnection — dbDisconnect,GDALOGRSQLConnection-method","text":"","code":"# S4 method for GDALOGRSQLConnection dbDisconnect(conn, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbDisconnect-GDALOGRSQLConnection-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disconnect a GDALOGRSQLConnection — dbDisconnect,GDALOGRSQLConnection-method","text":"conn GDALOGRSQLConnection ... Additional arguments (used)","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbFetch-GDALOGRSQLResult-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve records from OGRSQL query — dbFetch,GDALOGRSQLResult-method","title":"Retrieve records from OGRSQL query — dbFetch,GDALOGRSQLResult-method","text":"Retrieve records OGRSQL query","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbFetch-GDALOGRSQLResult-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve records from OGRSQL query — dbFetch,GDALOGRSQLResult-method","text":"","code":"# S4 method for GDALOGRSQLResult dbFetch(res, n = NULL, ..., geom = \"wkt\", fid = FALSE)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbFetch-GDALOGRSQLResult-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve records from OGRSQL query — dbFetch,GDALOGRSQLResult-method","text":"res GDALOGRSQLResult Object n Number records fetch. Default NULL records. ... Additional arguments geom character. Either \"json\", \"gml\", \"kml\", \"wkt\" (default) \"hex\" fid logical. Keep feature ID? Default: FALSE","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetInfo-GDALOGRSQLConnection-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GDALOGRSQLConnection information — dbGetInfo,GDALOGRSQLConnection-method","title":"Get GDALOGRSQLConnection information — dbGetInfo,GDALOGRSQLConnection-method","text":"Get GDALOGRSQLConnection information","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetInfo-GDALOGRSQLConnection-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GDALOGRSQLConnection information — dbGetInfo,GDALOGRSQLConnection-method","text":"","code":"# S4 method for GDALOGRSQLConnection dbGetInfo(dbObj, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetInfo-GDALOGRSQLConnection-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GDALOGRSQLConnection information — dbGetInfo,GDALOGRSQLConnection-method","text":"dbObj GDALOGRSQLConnection ... Additional arguments (used)","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetInfo-GDALOGRSQLDriver-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GDALOGRSQLDriver driver and GDAL version information — dbGetInfo,GDALOGRSQLDriver-method","title":"Get GDALOGRSQLDriver driver and GDAL version information — dbGetInfo,GDALOGRSQLDriver-method","text":"Get GDALOGRSQLDriver driver GDAL version information","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetInfo-GDALOGRSQLDriver-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GDALOGRSQLDriver driver and GDAL version information — dbGetInfo,GDALOGRSQLDriver-method","text":"","code":"# S4 method for GDALOGRSQLDriver dbGetInfo(dbObj, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetInfo-GDALOGRSQLDriver-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GDALOGRSQLDriver driver and GDAL version information — dbGetInfo,GDALOGRSQLDriver-method","text":"dbObj GDALOGRSQLDriver ... Additional arguments (used)","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetQuery-GDALOGRSQLConnection-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Send and Fetch an OGRSQL Query — dbGetQuery,GDALOGRSQLConnection,character-method","title":"Send and Fetch an OGRSQL Query — dbGetQuery,GDALOGRSQLConnection,character-method","text":"Send Fetch OGRSQL Query","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetQuery-GDALOGRSQLConnection-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send and Fetch an OGRSQL Query — dbGetQuery,GDALOGRSQLConnection,character-method","text":"","code":"# S4 method for GDALOGRSQLConnection,character dbGetQuery(conn, statement, ..., geom = \"wkt\")"},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetQuery-GDALOGRSQLConnection-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send and Fetch an OGRSQL Query — dbGetQuery,GDALOGRSQLConnection,character-method","text":"conn GDALOGRSQLConnection Object statement OGRSQL query execute. ... Additional arguments dbSendQuery() geom character. Either \"json\", \"gml\", \"kml\", \"wkt\" (default) \"hex\"","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetRowCount-GDALOGRSQLResult-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of rows returned in a SELECT query — dbGetRowCount,GDALOGRSQLResult-method","title":"Get number of rows returned in a SELECT query — dbGetRowCount,GDALOGRSQLResult-method","text":"Get number rows returned SELECT query","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetRowCount-GDALOGRSQLResult-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of rows returned in a SELECT query — dbGetRowCount,GDALOGRSQLResult-method","text":"","code":"# S4 method for GDALOGRSQLResult dbGetRowCount(res)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetRowCount-GDALOGRSQLResult-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of rows returned in a SELECT query — dbGetRowCount,GDALOGRSQLResult-method","text":"res GDALOGRSQLResult","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetRowsAffected-GDALOGRSQLResult-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of rows altered in a INSERT/UPDATE query — dbGetRowsAffected,GDALOGRSQLResult-method","title":"Get number of rows altered in a INSERT/UPDATE query — dbGetRowsAffected,GDALOGRSQLResult-method","text":"Get number rows altered INSERT/UPDATE query","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetRowsAffected-GDALOGRSQLResult-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of rows altered in a INSERT/UPDATE query — dbGetRowsAffected,GDALOGRSQLResult-method","text":"","code":"# S4 method for GDALOGRSQLResult dbGetRowsAffected(res)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetRowsAffected-GDALOGRSQLResult-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of rows altered in a INSERT/UPDATE query — dbGetRowsAffected,GDALOGRSQLResult-method","text":"res GDALOGRSQLResult","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetStatement-GDALOGRSQLResult-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the issued query as a character value — dbGetStatement,GDALOGRSQLResult-method","title":"Get the issued query as a character value — dbGetStatement,GDALOGRSQLResult-method","text":"Get issued query character value","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetStatement-GDALOGRSQLResult-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the issued query as a character value — dbGetStatement,GDALOGRSQLResult-method","text":"","code":"# S4 method for GDALOGRSQLResult dbGetStatement(res)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbGetStatement-GDALOGRSQLResult-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the issued query as a character value — dbGetStatement,GDALOGRSQLResult-method","text":"res GDALOGRSQLResult","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbHasCompleted-GDALOGRSQLResult-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if rows remain to be fetched — dbHasCompleted,GDALOGRSQLResult-method","title":"Check if rows remain to be fetched — dbHasCompleted,GDALOGRSQLResult-method","text":"Check rows remain fetched","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbHasCompleted-GDALOGRSQLResult-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if rows remain to be fetched — dbHasCompleted,GDALOGRSQLResult-method","text":"","code":"# S4 method for GDALOGRSQLResult dbHasCompleted(res, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbHasCompleted-GDALOGRSQLResult-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if rows remain to be fetched — dbHasCompleted,GDALOGRSQLResult-method","text":"res GDALOGRSQLResult Object ... Additional arguments","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbIsValid-GDALOGRSQLConnection-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if connection is open or closed — dbIsValid,GDALOGRSQLConnection-method","title":"Determine if connection is open or closed — dbIsValid,GDALOGRSQLConnection-method","text":"Determine connection open closed","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbIsValid-GDALOGRSQLConnection-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if connection is open or closed — dbIsValid,GDALOGRSQLConnection-method","text":"","code":"# S4 method for GDALOGRSQLConnection dbIsValid(dbObj, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbIsValid-GDALOGRSQLConnection-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if connection is open or closed — dbIsValid,GDALOGRSQLConnection-method","text":"dbObj GDALOGRConnection ... Additional arguments","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbIsValid-GDALOGRSQLResult-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a result set is open or closed — dbIsValid,GDALOGRSQLResult-method","title":"Determine if a result set is open or closed — dbIsValid,GDALOGRSQLResult-method","text":"Determine result set open closed","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbIsValid-GDALOGRSQLResult-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a result set is open or closed — dbIsValid,GDALOGRSQLResult-method","text":"","code":"# S4 method for GDALOGRSQLResult dbIsValid(dbObj, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbIsValid-GDALOGRSQLResult-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a result set is open or closed — dbIsValid,GDALOGRSQLResult-method","text":"dbObj GDALOGRSQLResult ... Additional arguments","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbListFields-GDALOGRSQLConnection-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fields are available in a given table. — dbListFields,GDALOGRSQLConnection,character-method","title":"Get fields are available in a given table. — dbListFields,GDALOGRSQLConnection,character-method","text":"Get fields available given table.","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbListFields-GDALOGRSQLConnection-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fields are available in a given table. — dbListFields,GDALOGRSQLConnection,character-method","text":"","code":"# S4 method for GDALOGRSQLConnection,character dbListFields(conn, name)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbListFields-GDALOGRSQLConnection-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fields are available in a given table. — dbListFields,GDALOGRSQLConnection,character-method","text":"conn GDALOGRSQLConnection name character. Table name.","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbSendQuery-GDALOGRSQLConnection-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a query to GDALOGRSQLDriver — dbSendQuery,GDALOGRSQLConnection,ANY-method","title":"Send a query to GDALOGRSQLDriver — dbSendQuery,GDALOGRSQLConnection,ANY-method","text":"Send query GDALOGRSQLDriver","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/dbSendQuery-GDALOGRSQLConnection-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a query to GDALOGRSQLDriver — dbSendQuery,GDALOGRSQLConnection,ANY-method","text":"","code":"# S4 method for GDALOGRSQLConnection,ANY dbSendQuery(conn, statement, ...)"},{"path":"http://humus.rocks/ROGRSQL/reference/dbSendQuery-GDALOGRSQLConnection-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a query to GDALOGRSQLDriver — dbSendQuery,GDALOGRSQLConnection,ANY-method","text":"conn GDALOGRSQLConnection Object statement OGRSQL query execute. ... Additional arguments","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/sample_gpkg_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample 'Luxembourg' Geopackage — sample_gpkg_path","title":"Sample 'Luxembourg' Geopackage — sample_gpkg_path","text":"Geopackage file created \"lux.shp\" test dataset {terra} R package.","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/sample_gpkg_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample 'Luxembourg' Geopackage — sample_gpkg_path","text":"","code":"sample_gpkg_path()"},{"path":"http://humus.rocks/ROGRSQL/reference/sample_gpkg_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample 'Luxembourg' Geopackage — sample_gpkg_path","text":"character. Path ROGRSQL package \"extdata\" folder \"lux.gpkg\" file.","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/sample_gpkg_path.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample 'Luxembourg' Geopackage — sample_gpkg_path","text":"Hijmans R (2024). terra: Spatial Data Analysis. R package version 1.7-78, https://rspatial.github.io/terra/, https://rspatial.org/.","code":""},{"path":"http://humus.rocks/ROGRSQL/reference/sample_gpkg_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample 'Luxembourg' Geopackage — sample_gpkg_path","text":"","code":"sample_gpkg_path() #> [1] \"/home/runner/work/_temp/Library/ROGRSQL/extdata/lux.gpkg\""}]
